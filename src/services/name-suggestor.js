const Words = [
    'cat',
    'bin',
    'license',
    'plate',
    'task',
    'batch',
    'slurry',
    'component',
    'assembly',
    'transaction',
    'transfer',
    'sales',
    'work',
    'order',
    'line',
    'pick',
    'picking',
    'recieve',
    'recieving',
    'lot',
    'serial',
    'inventory',
    'number',
    'name',
    'tote',
    'smart',
    'plan',
    'stock',
    'count',
    'counting',
    'scan',
    'scanning',
    'bar',
    'code',
    'meme',
    'planner',
    'manager',
    'picker',
    'kit',
    'roomba',
    'plugin',
    'pluglet',
    'legacy',
    'deprecated',
    'ship',
    'shipping',
    'shipper',
    'carton',
    'box',
    'package',
    'case',
    'deposit',
    'depositing',
    'forklift',
    'handheld',
    'warehouse',
    'warehousing',
    'data',
    'mining',
    'mine',
    'telepathy',
    'merge',
    'shelf',
    'rack',
    'cart',
    'position',
    'widget',
    'loading',
    'dock',
    'docking',
    'tape',
    'pallet',
    'cube',
    'weight',
    'pack',
    'packing',
    'station',
    'wifi',
    'print',
    'printer',
    'printing',
    'chain',
    'supply',
    'supplying',
    'wave',
    'dog',
    'internal',
    'external',
    'lock',
    'locking',
    'script',
    'scripting',
    'fragile',
    'priority',
    'sequence',
    'session',
    'recipe',
    'storage',
    'cold',
    'fast',
    'commit',
    'commitment',
    'comitted',
    'allocation',
    'reserve',
    'fulfill',
    'fulfillment',
    'fulfilling',
    'purchase',
    'purchasing',
    'dimension',
    'dispatch',
    'dispatching',
    'distribution',
    'center',
    'FIFO',
    'FEFO',
    'preferred',
    'best',
    'list',
    'putaway',
    'replenishment',
    'replenish',
    'replenishing',
    'restock',
    'restocking',
    'logistics',
    'strategy',
    'strategize',
    'upc',
    'wms',
    'zone',
    'return',
    'dolly',
    'crane',
    'hoist',
    'monorail',
    'truck',
    'cost',
    'costing',
    'method',
    'type',
    'advanced',
    'basic',
    'robot',
    'backflush',
    'backhaul',
    'bill',
    'material',
    'blind',
    'bulk',
    'multi',
    'carousel',
    'charge',
    'charging',
    'non',
    'label',
    'labeling',
    'commodity',
    'process',
    'processing',
    'consignment',
    'container',
    'contract',
    'cycle',
    'demand',
    'direct',
    'directed',
    'manufacturing',
    'manufacture',
    'distribution',
    'leveler',
    'leveling',
    'drop',
    'ticket',
    'event',
    'excess',
    'extrusion',
    'fill',
    'conveyor',
    'forecast',
    'error',
    'free',
    'trade',
    'trading',
    'jackpot',
    'shop',
    'storefront',
    'storing',
    'store',
    'laser',
    'LIFO',
    'lift',
    'system',
    'locator',
    'coupon',
    'mezzanine',
    'milk',
    'aisle',
    'negative',
    'obsolete',
    'optical',
    'paperless',
    'roll',
    'clamp',
    'phantom',
    'face',
    'path',
    'pseudo',
    'association',
    'wall',
    'put',
    'inbound',
    'outbound',
    'available',
    'quantity',
    'radio',
    'reserve',
    'reverse',
    'period',
    'route',
    'routing',
    'poptart',
    'caffiene',
    'shrine',
    'party',
    'seasonality',
    'season',
    'index',
    'manifest',
    'sku',
    'bucket',
    'flue',
    'unit',
    'rate',
    'item',
    'measure',
    'wip',
    'fire',
    'thousandisland',
    'suite',
    'bug',
    'giraffe',
    'approve',
    'lunch',
    'daisy',
    'rainbow',
    'sparkle',
    'unicorn',
    'gummi',
    'coffee',
    'popcorn',
    'microwave',
    'hack',
    'squeaker',
    'pok√©mon',
    'cheese',
];

export class NameSuggestor {
    static suggestRecordName(howMany) {
        if (!howMany) {
            howMany = Math.ceil(Math.random()*3) + 1;
        }

        const suggestion = [];
        while (suggestion.length < howMany) {
            const word = this.getWord();

            if (!suggestion.includes(word)) {
                suggestion.push(word);
            }
        }

        return suggestion;
    }

    static getWord () {
        return Words[Math.floor(Math.random()*Words.length)];
    }
}